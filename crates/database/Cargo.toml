[package]
name = "database"
version = "0.1.0"
authors = ["Convex, Inc. <no-reply@convex.dev>"]
edition = "2021"
license = "LicenseRef-FSL-1.1-Apache-2.0"

[lib]
doctest = false

[dependencies]
anyhow = { workspace = true }
async-broadcast = { workspace = true }
async-recursion = { workspace = true }
async-trait = { workspace = true }
async_lru = { path = "../async_lru" }
cmd_util = { path = "../cmd_util" }
common = { path = "../common" }
convex_macro = { path = "../convex_macro" }
derive_more = { workspace = true }
errors = { path = "../errors" }
events = { path = "../events" }
fastrace = { workspace = true }
futures = { workspace = true }
futures-async-stream = { workspace = true }
governor = { workspace = true }
imbl = { workspace = true }
indexing = { path = "../indexing" }
itertools = { workspace = true }
keybroker = { path = "../keybroker" }
maplit = { workspace = true }
metrics = { path = "../metrics" }
parking_lot = { workspace = true, features = ["hardware-lock-elision"] }
pb = { path = "../pb" }
prometheus = { workspace = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
qdrant_segment = { workspace = true }
rand = { workspace = true }
rand_chacha = { workspace = true }
runtime = { path = "../runtime" }
search = { path = "../search" }
serde = { workspace = true }
serde_json = { workspace = true }
shape_inference = { path = "../shape_inference" }
short_future = { workspace = true }
slab = { workspace = true }
storage = { path = "../storage" }
sync_types = { package = "convex_sync_types", path = "../convex/sync_types" }
tempfile = { workspace = true }
tokio = { workspace = true }
tokio-stream = { workspace = true }
tracing = { workspace = true }
usage_tracking = { path = "../usage_tracking" }
value = { path = "../value" }
vector = { path = "../vector" }

[dev-dependencies]
async-channel = { workspace = true }
common = { path = "../common", features = ["testing"] }
criterion = { workspace = true }
errors = { path = "../errors", features = ["testing"] }
events = { path = "../events", features = ["testing"] }
humansize = { workspace = true }
indexing = { path = "../indexing", features = ["testing"] }
keybroker = { path = "../keybroker", features = ["testing"] }
metrics = { path = "../metrics", features = ["testing"] }
must-let = { workspace = true }
pretty_assertions = { workspace = true }
proptest = { workspace = true }
proptest-derive = { workspace = true }
runtime = { path = "../runtime", features = ["testing"] }
search = { path = "../search", features = ["testing"] }
shape_inference = { path = "../shape_inference", features = ["testing"] }
storage = { path = "../storage", features = ["testing"] }
usage_tracking = { path = "../usage_tracking", features = ["testing"] }
value = { path = "../value", features = ["testing"] }
vector = { path = "../vector", features = ["testing"] }

[[bench]]
name = "subscriptions"
harness = false
required-features = ["testing"]

[features]
bench = ["testing"]
testing = [
    "common/testing",
    "errors/testing",
    "events/testing",
    "indexing/testing",
    "keybroker/testing",
    "metrics/testing",
    "proptest",
    "proptest-derive",
    "runtime/testing",
    "search/testing",
    "storage/testing",
    "shape_inference/testing",
    "usage_tracking/testing",
    "value/testing",
    "vector/testing",
]

[package.metadata.cargo-udeps.ignore]
development = ["criterion"] # udeps can't tell this is used by benchmarks

[lints]
workspace = true
