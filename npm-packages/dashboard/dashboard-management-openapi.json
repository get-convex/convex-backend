{
  "openapi": "3.1.0",
  "info": {
    "title": "big_brain",
    "description": "",
    "license": {
      "name": "LicenseRef-Convex",
      "identifier": "LicenseRef-Convex"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/profile_emails/list": {
      "get": {
        "operationId": "list_profile_emails",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberEmailResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile_emails/create": {
      "post": {
        "operationId": "create_profile_email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileEmailArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/profile_emails/delete": {
      "post": {
        "operationId": "delete_profile_email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileEmailArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/member_data": {
      "get": {
        "operationId": "get_member_data",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "operationId": "get_profile",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/profile_emails/resend_verification": {
      "post": {
        "operationId": "resend_verification_email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileEmailArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/profile_emails/update_primary": {
      "post": {
        "operationId": "update_primary_profile_email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileEmailArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/update_profile_name": {
      "put": {
        "operationId": "update_profile_name",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileNameArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/profile_emails/verify/{code}": {
      "post": {
        "operationId": "verify_profile_email",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/delete_account": {
      "post": {
        "operationId": "delete_account",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/optins": {
      "get": {
        "operationId": "dashboard_get_opt_ins",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOptInsResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "dashboard_accept_opt_ins",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OptIn"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/teams": {
      "get": {
        "operationId": "get_teams_for_member",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_team",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/members": {
      "get": {
        "operationId": "get_members_for_team",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/remove_member": {
      "post": {
        "operationId": "remove_member_from_team",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveMemberArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/get_entitlements": {
      "get": {
        "operationId": "get_team_entitlements",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamEntitlementsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}": {
      "post": {
        "operationId": "update_team",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeamArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/delete": {
      "post": {
        "operationId": "delete_team",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/apply_referral_code": {
      "post": {
        "operationId": "apply_referral_code",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyReferralCodeArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/validate_referral_code": {
      "get": {
        "operationId": "validate_referral_code",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateReferralCodeResult"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/referral_state": {
      "get": {
        "operationId": "get_referral_state_for_team",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralState"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/projects": {
      "get": {
        "operationId": "get_projects_for_team",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDetails"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/usage/team_usage_state": {
      "get": {
        "operationId": "get_team_usage_state",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUsageStateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/unpause": {
      "post": {
        "operationId": "unpause_deployments",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/get_audit_log_events": {
      "get": {
        "operationId": "get_audit_log_events",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "form"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "form"
          },
          {
            "name": "memberId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/MemberId"
            },
            "style": "form"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AuditLogAction"
            },
            "style": "form"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            },
            "style": "form"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}": {
      "get": {
        "operationId": "get_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/projects/{project_id}/instances": {
      "get": {
        "operationId": "list_deployments_for_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeploymentResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delete_project/{project_id}": {
      "post": {
        "operationId": "dashboard_delete_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/delete_projects": {
      "post": {
        "operationId": "dashboard_delete_projects",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteProjectsArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/create_project": {
      "post": {
        "operationId": "create_project_and_provision_deployment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/transfer": {
      "post": {
        "operationId": "transfer_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferProjectArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/instances/{deployment_name}/auth": {
      "post": {
        "operationId": "get_deployment_auth_dashboard",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceAuthForDashboardInteractionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/provision": {
      "post": {
        "operationId": "provision_deployment_dashboard",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvisionDeploymentDashboardArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionDeploymentDashboardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/deployments/{deployment_id}": {
      "get": {
        "operationId": "get_deployment_by_id",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamId"
            }
          },
          {
            "name": "deployment_id",
            "in": "path",
            "description": "Can be a deployment's id (integer) or name (string)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/update_member_role": {
      "post": {
        "operationId": "update_member_role",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberRoleArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/get_project_roles": {
      "get": {
        "operationId": "get_project_roles_for_team",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectMemberRoleResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/update_project_roles": {
      "post": {
        "operationId": "update_project_roles",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectRolesArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/deployments/{deployment_id}/request_cloud_backup": {
      "post": {
        "operationId": "request_cloud_backup",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudBackupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_id}/restore_from_cloud_backup": {
      "post": {
        "operationId": "restore_from_cloud_backup",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreFromCloudBackupArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/list_cloud_backups": {
      "get": {
        "operationId": "list_cloud_backups",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CloudBackupResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cloud_backups/{cloud_backup_id}/delete": {
      "post": {
        "operationId": "delete_cloud_backup",
        "parameters": [
          {
            "name": "cloud_backup_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/cloud_backups/{cloud_backup_id}": {
      "get": {
        "operationId": "get_cloud_backup",
        "parameters": [
          {
            "name": "cloud_backup_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudBackupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cloud_backups/{cloud_backup_id}/cancel": {
      "post": {
        "operationId": "cancel_cloud_backup",
        "parameters": [
          {
            "name": "cloud_backup_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "default": null
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_id}/get_periodic_backup_config": {
      "get": {
        "operationId": "get_periodic_backup_config",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "$ref": "#/components/schemas/PeriodicBackupConfig"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_id}/configure_periodic_backup": {
      "post": {
        "operationId": "configure_periodic_backup",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurePeriodicBackupArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "$ref": "#/components/schemas/PeriodicBackupConfig"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_id}/disable_periodic_backup": {
      "post": {
        "operationId": "disable_periodic_backup",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/discord/accounts": {
      "get": {
        "operationId": "get_discord_accounts",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscordAccountsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/discord/login_url": {
      "get": {
        "operationId": "get_discord_login_url",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscordLoginUrlResponse"
                }
              }
            }
          }
        }
      }
    },
    "/discord/authorize": {
      "post": {
        "operationId": "authorize_discord_account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeDiscordAccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/discord/unlink": {
      "post": {
        "operationId": "unlink_discord_account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlinkDiscordAccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/instances/{deployment_name}/domains/create": {
      "post": {
        "operationId": "create_vanity_domain",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlatformDeleteCustomDomainArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/instances/{deployment_name}/domains/delete": {
      "post": {
        "operationId": "delete_vanity_domain",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlatformDeleteCustomDomainArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/instances/{deployment_name}/domains/list": {
      "get": {
        "operationId": "list_vanity_domains_for_instance",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVanityDomainsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rename_token": {
      "post": {
        "operationId": "rename_access_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameAccessTokenArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/delete_access_token": {
      "post": {
        "operationId": "delete_access_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAccessTokenArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/access_tokens": {
      "get": {
        "operationId": "get_team_access_tokens",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamAccessTokenResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/app_access_tokens": {
      "get": {
        "operationId": "get_team_app_access_tokens",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppAccessTokenResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/{deployment_name}/access_tokens": {
      "get": {
        "operationId": "get_deployment_access_tokens",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamAccessTokenResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/access_tokens": {
      "get": {
        "operationId": "get_project_access_tokens",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamAccessTokenResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/app_access_tokens": {
      "get": {
        "operationId": "get_project_app_access_tokens",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppAccessTokenResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/delete_access_token": {
      "post": {
        "operationId": "delete_team_access_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionOnAccessTokenArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/authorize": {
      "post": {
        "summary": "This endpoint is a placeholder for generating our own access tokens.\nRight now, it is a no-op for the token.\nVersion 1 of the token is the WorkOS access token",
        "operationId": "authorize_device",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/authorize_app": {
      "post": {
        "operationId": "authorize_app",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeAppArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizeCodeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/invites": {
      "get": {
        "operationId": "pending_invitations_for_team",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvitationResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_invitation",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitationArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/invites/cancel": {
      "post": {
        "operationId": "cancel_invitation",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelInvitationArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/invites/{code}/accept": {
      "post": {
        "operationId": "accept_invitation",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/cancel_orb_subscription": {
      "post": {
        "operationId": "cancel_orb_subscription",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/change_subscription_plan": {
      "post": {
        "operationId": "change_subscription_plan",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeSubscriptionPlanArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/create_subscription": {
      "post": {
        "operationId": "create_subscription",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/get_discounted_plan/{plan_id}/{promo_code}": {
      "get": {
        "operationId": "get_discounted_plan",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          },
          {
            "name": "plan_id",
            "in": "path",
            "description": "",
            "required": true
          },
          {
            "name": "promo_code",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountedPlanResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/get_orb_subscription": {
      "get": {
        "operationId": "get_orb_subscription",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "$ref": "#/components/schemas/OrbSubscriptionResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/list_active_plans": {
      "get": {
        "operationId": "list_active_plans",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlansResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/list_invoices": {
      "get": {
        "operationId": "list_invoices",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/unschedule_cancel_orb_subscription": {
      "post": {
        "operationId": "unschedule_cancel_orb_subscription",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/update_billing_address": {
      "put": {
        "operationId": "update_billing_address",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBillingAddressArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/update_billing_contact": {
      "put": {
        "operationId": "update_billing_contact",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBillingContactArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/update_payment_method": {
      "put": {
        "operationId": "update_payment_method",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentMethodArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/create_setup_intent": {
      "post": {
        "operationId": "create_setup_intent",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupIntentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/set_spending_limit": {
      "post": {
        "operationId": "set_spending_limit",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSpendingLimitArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/get_current_spend": {
      "get": {
        "operationId": "get_current_spend",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentSpendResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/get_spending_limits": {
      "get": {
        "operationId": "get_spending_limits",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSpendingLimitsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/preview_deployments": {
      "get": {
        "operationId": "list_preview_deployments_for_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeploymentResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/delete_preview_deployment": {
      "post": {
        "operationId": "deactivate_preview_deployment",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivatePreviewDeploymentArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/projects/{project_id}/environment_variables/list": {
      "get": {
        "operationId": "list_environment_variables",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEnvVariableResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/environment_variables/update_batch": {
      "post": {
        "operationId": "update_environment_variables",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnvironmentVariables"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/usage/query": {
      "get": {
        "operationId": "query_usage_databricks",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          },
          {
            "name": "queryId",
            "in": "query",
            "description": "Uuid of a databricks query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ProjectId"
            },
            "style": "form"
          },
          {
            "name": "deploymentName",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/InstanceName"
            },
            "style": "form"
          },
          {
            "name": "componentPath",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "udfId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "tableName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/usage/current_billing_period": {
      "get": {
        "operationId": "get_team_current_billing_period",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamCurrentBillingPeriodResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_slug}/usage/get_token_info": {
      "get": {
        "operationId": "get_token_info",
        "parameters": [
          {
            "name": "team_slug",
            "in": "path",
            "description": "",
            "required": true
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTokenInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_slug}/usage/record_tokens": {
      "post": {
        "operationId": "record_tokens",
        "parameters": [
          {
            "name": "team_slug",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordTokensArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTokenInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/unlink_identity": {
      "post": {
        "description": "Unlink a secondary identity from a user's account",
        "operationId": "unlink_identity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlinkIdentityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {}
      }
    },
    "/list_identities": {
      "get": {
        "description": "List all identities for a user",
        "operationId": "list_identities",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthIdentityResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/identities": {
      "get": {
        "description": "List simplified identities grouped by WorkOS user ID",
        "operationId": "identities",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/oauth_apps": {
      "get": {
        "operationId": "list_oauth_apps_for_team",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OauthAppResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/oauth_apps/check": {
      "post": {
        "operationId": "check_oauth_app",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckOauthAppArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthAppResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/oauth_apps/register": {
      "post": {
        "operationId": "register_oauth_app",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterOauthAppArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthAppResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/oauth_apps/{client_id}/update": {
      "post": {
        "operationId": "update_oauth_app",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamId"
            }
          },
          {
            "name": "client_id",
            "in": "path",
            "description": "The client ID of the OAuth app to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOauthAppArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthAppResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/oauth_apps/{client_id}/delete": {
      "post": {
        "operationId": "delete_oauth_app",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamId"
            }
          },
          {
            "name": "client_id",
            "in": "path",
            "description": "The client ID of the OAuth app to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/teams/{team_id}/oauth_apps/{client_id}/regenerate_secret": {
      "post": {
        "operationId": "regenerate_oauth_client_secret",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamId"
            }
          },
          {
            "name": "client_id",
            "in": "path",
            "description": "The client ID of the OAuth app to regenerate the secret for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/workos/available_workos_team_emails": {
      "get": {
        "description": "Get candidate email addresses to be WorkOS admins.",
        "operationId": "get_available_workos_team_emails",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableWorkOSTeamEmailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/workos_environment": {
      "get": {
        "operationId": "get_deployment_workos_environment",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentWorkOSEnvironmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{deployment_name}/has_associated_workos_team": {
      "get": {
        "description": "Check if a deployment has an associated WorkOS team",
        "operationId": "get_has_associated_workos_team",
        "parameters": [
          {
            "name": "deployment_name",
            "in": "path",
            "description": "Deployment name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HasAssociatedWorkOSTeamResponse"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}/workos_integration": {
      "get": {
        "operationId": "get_team_workos_integration",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkOSTeamIntegrationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workos/provision_associated_workos_team": {
      "post": {
        "description": "Provision a WorkOS team for a Convex team",
        "operationId": "provision_associated_workos_team",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvisionWorkOSTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionWorkOSTeamResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionOnAccessTokenArgs": {
        "type": "object",
        "required": [
          "accessToken"
        ],
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "city": {
            "type": [
              "string",
              "null"
            ]
          },
          "country": {
            "type": [
              "string",
              "null"
            ]
          },
          "line1": {
            "type": [
              "string",
              "null"
            ]
          },
          "line2": {
            "type": [
              "string",
              "null"
            ]
          },
          "postal_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "state": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "AdminKey": {
        "type": "string",
        "description": "Encrypted admin key"
      },
      "AppAccessTokenResponse": {
        "type": "object",
        "required": [
          "name",
          "appName",
          "appClientId",
          "creationTime"
        ],
        "properties": {
          "appClientId": {
            "type": "string"
          },
          "appName": {
            "$ref": "#/components/schemas/AppName"
          },
          "creationTime": {
            "type": "integer",
            "format": "int64"
          },
          "lastUsedTime": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "name": {
            "$ref": "#/components/schemas/DeviceName"
          }
        }
      },
      "AppName": {
        "type": "string"
      },
      "ApplyReferralCodeArgs": {
        "type": "object",
        "required": [
          "referralCode"
        ],
        "properties": {
          "referralCode": {
            "$ref": "#/components/schemas/ReferralCode"
          }
        }
      },
      "AuditLogAction": {
        "type": "string",
        "enum": [
          "joinTeam",
          "createTeam",
          "updateTeam",
          "deleteTeam",
          "createProject",
          "transferProject",
          "receiveProject",
          "updateProject",
          "deleteProject",
          "createProjectEnvironmentVariable",
          "updateProjectEnvironmentVariable",
          "deleteProjectEnvironmentVariable",
          "createDeployment",
          "deleteDeployment",
          "inviteMember",
          "cancelMemberInvitation",
          "removeMember",
          "updateMemberRole",
          "updateMemberProjectRole",
          "updatePaymentMethod",
          "updateBillingContact",
          "updateBillingAddress",
          "createSubscription",
          "resumeSubscription",
          "cancelSubscription",
          "changeSubscriptionPlan",
          "createTeamAccessToken",
          "updateTeamAccessToken",
          "deleteTeamAccessToken",
          "viewTeamAccessToken",
          "createCustomDomain",
          "deleteCustomDomain",
          "startManualCloudBackup",
          "restoreFromCloudBackup",
          "configurePeriodicBackup",
          "disablePeriodicBackup",
          "deleteCloudBackup",
          "disableTeamExceedingSpendingLimits",
          "setSpendingLimit",
          "applyReferralCode",
          "createOAuthApplication",
          "updateOAuthApplication",
          "deleteOAuthApplication",
          "verifyOAuthApplication",
          "generateOAuthClientSecret",
          "createWorkosTeam",
          "createWorkosEnvironment",
          "retrieveWorkosEnvironmentCredentials"
        ]
      },
      "AuditLogActor": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "system"
            ]
          },
          {
            "type": "object",
            "required": [
              "member"
            ],
            "properties": {
              "member": {
                "type": "object",
                "required": [
                  "member_id"
                ],
                "properties": {
                  "member_id": {
                    "$ref": "#/components/schemas/MemberId"
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "serviceAccount"
            ],
            "properties": {
              "serviceAccount": {
                "type": "object",
                "required": [
                  "member_id"
                ],
                "properties": {
                  "member_id": {
                    "$ref": "#/components/schemas/MemberId"
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "team"
            ],
            "properties": {
              "team": {
                "type": "object",
                "required": [
                  "team_id"
                ],
                "properties": {
                  "team_id": {
                    "$ref": "#/components/schemas/TeamId"
                  }
                }
              }
            }
          }
        ],
        "description": "Represents the `ValidatedActor` equivalent for audit logs. This identifies\nwho executed an AuditLogEvent"
      },
      "AuditLogEventResponse": {
        "type": "object",
        "required": [
          "teamId",
          "actor",
          "action",
          "createTime",
          "metadata"
        ],
        "properties": {
          "action": {
            "$ref": "#/components/schemas/AuditLogAction"
          },
          "actor": {
            "$ref": "#/components/schemas/AuditLogActor"
          },
          "createTime": {
            "type": "integer",
            "format": "int64"
          },
          "metadata": {
            "$ref": "#/components/schemas/Value"
          },
          "teamId": {
            "$ref": "#/components/schemas/TeamId"
          }
        }
      },
      "AuditLogResponse": {
        "type": "object",
        "description": "Struct that contains the result of a query to the audit_logs table. The\n`events` field contains all of the `AuditLog` values and the `cursor` field\ndenotes where to resume the query if more results are needed.",
        "required": [
          "events"
        ],
        "properties": {
          "cursor": {
            "type": [
              "string",
              "null"
            ]
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogEventResponse"
            }
          }
        }
      },
      "AuthIdentityResponse": {
        "type": "object",
        "required": [
          "connection",
          "userId",
          "provider",
          "isPrimary"
        ],
        "properties": {
          "connection": {
            "type": "string"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "parentUserId": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "AuthorizeAppArgs": {
        "type": "object",
        "required": [
          "authnToken",
          "mode",
          "clientId",
          "redirectUri"
        ],
        "properties": {
          "authnToken": {
            "type": "string",
            "description": "Authentication token is expected to be the access token from WorkOS"
          },
          "clientId": {
            "type": "string"
          },
          "codeChallenge": {
            "type": [
              "string",
              "null"
            ]
          },
          "mode": {
            "$ref": "#/components/schemas/AuthorizeAppMode"
          },
          "projectId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectId"
              }
            ]
          },
          "redirectUri": {
            "type": "string"
          },
          "teamId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TeamId"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "AuthorizeAppMode": {
        "type": "string",
        "enum": [
          "AuthorizationCode"
        ]
      },
      "AuthorizeArgs": {
        "type": "object",
        "required": [
          "authnToken"
        ],
        "properties": {
          "anonymousId": {
            "type": [
              "string",
              "null"
            ]
          },
          "authnToken": {
            "type": "string",
            "description": "Authentication token is expected to be the access token from WorkOS"
          },
          "deploymentId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/DeploymentId"
              }
            ]
          },
          "deviceName": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/DeviceName"
              }
            ]
          },
          "oauthApp": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OauthAppMetadata"
              }
            ]
          },
          "permissions": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "projectId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectId"
              }
            ]
          },
          "teamId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TeamId"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "AuthorizeCodeResponse": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "A code that the application can use to retrieve the token"
          }
        }
      },
      "AuthorizeDiscordAccountRequest": {
        "type": "object",
        "required": [
          "authorizationCode",
          "csrfToken"
        ],
        "properties": {
          "authorizationCode": {
            "type": "string"
          },
          "csrfToken": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthorizeResponse": {
        "type": "object",
        "required": [
          "accessToken"
        ],
        "properties": {
          "accessToken": {
            "$ref": "#/components/schemas/SerializedAccessToken",
            "description": "a serialized access token that the CLI will send back up"
          }
        }
      },
      "AvailableWorkOSTeamEmailsResponse": {
        "type": "object",
        "required": [
          "availableEmails",
          "usedEmails"
        ],
        "properties": {
          "availableEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usedEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BillingContactResponse": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CancelInvitationArgs": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ChangeSubscriptionPlanArgs": {
        "type": "object",
        "required": [
          "newPlanId"
        ],
        "properties": {
          "newPlanId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CheckOauthAppArgs": {
        "type": "object",
        "required": [
          "clientId",
          "redirectUri"
        ],
        "properties": {
          "clientId": {
            "type": "string"
          },
          "redirectUri": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CloudBackupId": {
        "type": "integer",
        "format": "int64",
        "minimum": 0
      },
      "CloudBackupResponse": {
        "type": "object",
        "required": [
          "id",
          "sourceDeploymentId",
          "sourceDeploymentName",
          "expirationTime",
          "state",
          "requestedTime"
        ],
        "properties": {
          "expirationTime": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "$ref": "#/components/schemas/CloudBackupId"
          },
          "requestedTime": {
            "type": "integer",
            "format": "int64"
          },
          "snapshotId": {
            "type": [
              "string",
              "null"
            ]
          },
          "sourceDeploymentId": {
            "$ref": "#/components/schemas/DeploymentId"
          },
          "sourceDeploymentName": {
            "$ref": "#/components/schemas/InstanceName"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "ConfigurePeriodicBackupArgs": {
        "type": "object",
        "required": [
          "cronspec"
        ],
        "properties": {
          "cronspec": {
            "type": "string"
          },
          "expirationDeltaSecs": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "CreateInvitationArgs": {
        "type": "object",
        "required": [
          "email",
          "role"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        }
      },
      "CreateProjectArgs": {
        "type": "object",
        "required": [
          "team",
          "projectName"
        ],
        "properties": {
          "deploymentType": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/DeploymentType"
              }
            ]
          },
          "projectName": {
            "$ref": "#/components/schemas/ProjectName"
          },
          "team": {
            "$ref": "#/components/schemas/TeamSlug"
          }
        },
        "additionalProperties": false
      },
      "CreateProjectResponse": {
        "type": "object",
        "required": [
          "projectSlug",
          "projectId",
          "teamSlug",
          "teamId",
          "deploymentName",
          "prodUrl",
          "projectsRemaining"
        ],
        "properties": {
          "adminKey": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AdminKey"
              }
            ]
          },
          "deploymentName": {
            "type": "string"
          },
          "prodUrl": {
            "type": "string"
          },
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "projectSlug": {
            "$ref": "#/components/schemas/ProjectSlug"
          },
          "projectsRemaining": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "teamId": {
            "$ref": "#/components/schemas/TeamId"
          },
          "teamSlug": {
            "$ref": "#/components/schemas/TeamSlug"
          }
        }
      },
      "CreateSubscriptionArgs": {
        "type": "object",
        "required": [
          "name",
          "email",
          "planId"
        ],
        "properties": {
          "billingAddress": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "disableThresholdCents": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64",
            "minimum": 0
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "paymentMethod": {
            "type": [
              "string",
              "null"
            ]
          },
          "planId": {
            "type": "string"
          },
          "warningThresholdCents": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64",
            "minimum": 0
          }
        },
        "additionalProperties": false
      },
      "CreateTeamArgs": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ProposedTeamName"
          }
        }
      },
      "DeactivatePreviewDeploymentArgs": {
        "type": "object",
        "required": [
          "identifier"
        ],
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/PreviewDeploymentIdentifier"
          }
        }
      },
      "DeleteAccessTokenArgs": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/DeviceName"
          }
        },
        "additionalProperties": false
      },
      "DeleteProjectsArgs": {
        "type": "object",
        "required": [
          "projectIds"
        ],
        "properties": {
          "projectIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectId"
            }
          }
        }
      },
      "DeploymentId": {
        "type": "integer",
        "format": "int64",
        "minimum": 0
      },
      "DeploymentResponse": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "id",
              "name",
              "createTime",
              "deploymentType",
              "projectId",
              "kind"
            ],
            "properties": {
              "createTime": {
                "type": "integer",
                "format": "int64"
              },
              "creator": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "$ref": "#/components/schemas/MemberId"
                  }
                ]
              },
              "deploymentType": {
                "$ref": "#/components/schemas/DeploymentType"
              },
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "cloud"
                ]
              },
              "name": {
                "type": "string"
              },
              "previewIdentifier": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "$ref": "#/components/schemas/PreviewDeploymentIdentifier"
                  }
                ]
              },
              "projectId": {
                "$ref": "#/components/schemas/ProjectId"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "name",
              "createTime",
              "deploymentType",
              "projectId",
              "creator",
              "port",
              "lastUpdateTime",
              "deviceName",
              "isActive",
              "kind"
            ],
            "properties": {
              "createTime": {
                "type": "integer",
                "format": "int64"
              },
              "creator": {
                "$ref": "#/components/schemas/MemberId"
              },
              "deploymentType": {
                "$ref": "#/components/schemas/DeploymentType"
              },
              "deviceName": {
                "$ref": "#/components/schemas/DeviceName"
              },
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "isActive": {
                "type": "boolean"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "local"
                ]
              },
              "lastUpdateTime": {
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "type": "string"
              },
              "port": {
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              "previewIdentifier": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "$ref": "#/components/schemas/PreviewDeploymentIdentifier"
                  }
                ]
              },
              "projectId": {
                "$ref": "#/components/schemas/ProjectId"
              }
            }
          }
        ]
      },
      "DeploymentType": {
        "type": "string",
        "enum": [
          "dev",
          "prod",
          "preview"
        ]
      },
      "DeploymentWorkOSEnvironmentInfo": {
        "type": "object",
        "required": [
          "deploymentName",
          "workosEnvironmentId",
          "workosEnvironmentName",
          "workosClientId"
        ],
        "properties": {
          "deploymentName": {
            "type": "string"
          },
          "workosClientId": {
            "type": "string"
          },
          "workosEnvironmentId": {
            "type": "string"
          },
          "workosEnvironmentName": {
            "type": "string"
          }
        }
      },
      "DeploymentWorkOSEnvironmentResponse": {
        "type": "object",
        "required": [
          "teamId"
        ],
        "properties": {
          "environment": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/DeploymentWorkOSEnvironmentInfo",
                "description": "WorkOS environment info if it exists for this deployment"
              }
            ]
          },
          "teamId": {
            "$ref": "#/components/schemas/TeamId"
          },
          "workosTeam": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/WorkOSAssociatedTeam",
                "description": "Team info if the team has WorkOS configured"
              }
            ]
          }
        }
      },
      "DeviceName": {
        "type": "string"
      },
      "DiscordAccount": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "details": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/DiscordAccountDetails"
              }
            ]
          },
          "id": {
            "type": "string"
          }
        }
      },
      "DiscordAccountDetails": {
        "type": "object",
        "required": [
          "username",
          "discriminator"
        ],
        "properties": {
          "avatar": {
            "type": [
              "string",
              "null"
            ]
          },
          "discriminator": {
            "type": "string"
          },
          "global_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "username": {
            "type": "string"
          }
        }
      },
      "DiscordAccountsResponse": {
        "type": "object",
        "required": [
          "accounts"
        ],
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscordAccount"
            }
          }
        }
      },
      "DiscordId": {
        "type": "string"
      },
      "DiscordLoginUrlResponse": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "DiscountedPlanResponse": {
        "type": "object",
        "required": [
          "planId",
          "percentOff",
          "requiresPaymentMethod"
        ],
        "properties": {
          "durationInMonths": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64",
            "minimum": 0
          },
          "percentOff": {
            "type": "number",
            "format": "double"
          },
          "planId": {
            "type": "string"
          },
          "requiresPaymentMethod": {
            "type": "boolean"
          }
        }
      },
      "EnvVariableConfigJson": {
        "type": "object",
        "required": [
          "name",
          "value",
          "deploymentTypes"
        ],
        "properties": {
          "deploymentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeploymentType"
            }
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "EnvironmentVariableJson": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "GetCurrentSpendResponse": {
        "type": "object",
        "required": [
          "totalCents"
        ],
        "properties": {
          "totalCents": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "GetOptInsResponse": {
        "type": "object",
        "required": [
          "optInsToAccept"
        ],
        "properties": {
          "optInsToAccept": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptInToAccept"
            }
          }
        }
      },
      "GetSpendingLimitsResponse": {
        "type": "object",
        "properties": {
          "disableThresholdCents": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64",
            "minimum": 0
          },
          "state": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpendingLimitsState"
              }
            ]
          },
          "warningThresholdCents": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "GetTokenInfoResponse": {
        "type": "object",
        "required": [
          "tokensUsed",
          "tokensQuota",
          "centitokensUsed",
          "centitokensQuota",
          "isTeamDisabled",
          "isPaidPlan",
          "planType"
        ],
        "properties": {
          "centitokensQuota": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "centitokensUsed": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "isPaidPlan": {
            "type": "boolean"
          },
          "isTeamDisabled": {
            "type": "boolean"
          },
          "planType": {
            "type": "string"
          },
          "tokensQuota": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "tokensUsed": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "HasAssociatedWorkOSTeamResponse": {
        "type": "object",
        "required": [
          "hasAssociatedWorkosTeam",
          "teamId"
        ],
        "properties": {
          "adminConvexEmail": {
            "type": [
              "string",
              "null"
            ],
            "description": "Email of Convex team member who created the WorkOS account.\nThis field should always be present when has_associated_workos_team is\ntrue."
          },
          "adminEmail": {
            "type": [
              "string",
              "null"
            ],
            "description": "Email address used to provision the WorkOS account. This field should\nalways be present if has_associated_workos_team is true."
          },
          "adminName": {
            "type": [
              "string",
              "null"
            ],
            "description": "Name of Convex team member who created the WorkOS account.\nThis field is optional even when has_associated_workos_team is true."
          },
          "hasAssociatedWorkosTeam": {
            "type": "boolean"
          },
          "teamId": {
            "$ref": "#/components/schemas/TeamId"
          }
        }
      },
      "IdentityResponse": {
        "type": "object",
        "required": [
          "id",
          "providers"
        ],
        "properties": {
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "type": "string"
          },
          "providers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "InstanceAuthForDashboardInteractionsResponse": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "adminKey",
              "instanceUrl",
              "kind"
            ],
            "properties": {
              "adminKey": {
                "$ref": "#/components/schemas/SerializedAccessToken"
              },
              "instanceUrl": {
                "type": "string"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "Cloud"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "adminKey",
              "instanceUrl",
              "kind"
            ],
            "properties": {
              "adminKey": {
                "$ref": "#/components/schemas/AdminKey"
              },
              "instanceUrl": {
                "type": "string"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "Local"
                ]
              }
            }
          }
        ]
      },
      "InstanceName": {
        "type": "string",
        "description": "Example instance names:\n\ntall-sheep-123\n\ntest-tall-sheep-123  # Prefix of test for internal testing"
      },
      "InvitationResponse": {
        "type": "object",
        "required": [
          "email",
          "expired",
          "role"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "expired": {
            "type": "boolean"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        }
      },
      "InvoiceResponse": {
        "type": "object",
        "required": [
          "id",
          "invoiceDate",
          "invoiceNumber",
          "currency",
          "amountDue",
          "total",
          "status",
          "hasFailedPayment"
        ],
        "properties": {
          "amountDue": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "hasFailedPayment": {
            "type": "boolean"
          },
          "hostedInvoiceUrl": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "type": "string"
          },
          "invoiceDate": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceNumber": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "total": {
            "type": "string"
          }
        }
      },
      "InvoicesResponse": {
        "type": "object",
        "required": [
          "invoices"
        ],
        "properties": {
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceResponse"
            }
          }
        }
      },
      "ListEnvVariableResponse": {
        "type": "object",
        "required": [
          "configs"
        ],
        "properties": {
          "configs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvVariableConfigJson"
            }
          }
        }
      },
      "ListVanityDomainsResponse": {
        "type": "object",
        "required": [
          "domains"
        ],
        "properties": {
          "domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VanityDomainResponse"
            }
          }
        }
      },
      "MemberDataResponse": {
        "type": "object",
        "required": [
          "teams",
          "projects",
          "deployments",
          "optInsToAccept"
        ],
        "properties": {
          "deployments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeploymentResponse"
            }
          },
          "optInsToAccept": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptInToAccept"
            }
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectDetails"
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Team"
            }
          }
        }
      },
      "MemberEmailId": {
        "type": "integer",
        "format": "int64",
        "minimum": 0
      },
      "MemberEmailResponse": {
        "type": "object",
        "required": [
          "id",
          "email",
          "isVerified",
          "isPrimary",
          "creationTime"
        ],
        "properties": {
          "creationTime": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/MemberEmailId"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isVerified": {
            "type": "boolean"
          }
        }
      },
      "MemberId": {
        "type": "integer",
        "format": "int64",
        "minimum": 0
      },
      "MemberResponse": {
        "type": "object",
        "required": [
          "id",
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/MemberId"
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "OauthAppMetadata": {
        "type": "object",
        "required": [
          "clientId",
          "clientSecret"
        ],
        "properties": {
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OauthAppResponse": {
        "type": "object",
        "required": [
          "clientId",
          "appName",
          "redirectUris",
          "verified",
          "createTime"
        ],
        "properties": {
          "appName": {
            "$ref": "#/components/schemas/AppName"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": [
              "string",
              "null"
            ]
          },
          "createTime": {
            "type": "integer",
            "format": "int64"
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "OptIn": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "tos"
            ],
            "properties": {
              "tos": {
                "type": "string"
              }
            }
          }
        ]
      },
      "OptInToAccept": {
        "type": "object",
        "required": [
          "optIn",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "optIn": {
            "$ref": "#/components/schemas/OptIn"
          }
        }
      },
      "OrbSubscriptionResponse": {
        "type": "object",
        "required": [
          "plan",
          "billingContact",
          "status",
          "nextBillingPeriodStart"
        ],
        "properties": {
          "billingAddress": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "billingContact": {
            "$ref": "#/components/schemas/BillingContactResponse"
          },
          "endDate": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "nextBillingPeriodStart": {
            "type": "string"
          },
          "paymentMethod": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodResponse"
              }
            ]
          },
          "plan": {
            "$ref": "#/components/schemas/PlanResponse"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "PaymentMethodResponse": {
        "type": "object",
        "required": [
          "kind",
          "display"
        ],
        "properties": {
          "display": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "PeriodicBackupConfig": {
        "type": "object",
        "required": [
          "sourceDeploymentId",
          "cronspec",
          "expirationDeltaSecs",
          "nextRun"
        ],
        "properties": {
          "cronspec": {
            "type": "string"
          },
          "expirationDeltaSecs": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "nextRun": {
            "type": "integer",
            "format": "int64"
          },
          "sourceDeploymentId": {
            "$ref": "#/components/schemas/DeploymentId"
          }
        }
      },
      "PlanResponse": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "status"
        ],
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "planType": {
            "type": [
              "string",
              "null"
            ]
          },
          "seatPrice": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "PlansResponse": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanResponse"
            }
          }
        }
      },
      "PlatformDeleteCustomDomainArgs": {
        "type": "object",
        "required": [
          "requestDestination",
          "domain"
        ],
        "properties": {
          "domain": {
            "type": "string",
            "description": "The custom domain name to delete."
          },
          "requestDestination": {
            "$ref": "#/components/schemas/RequestDestination",
            "description": "The destination for this custom domain (convexCloud or convexSite)."
          }
        }
      },
      "PreviewDeploymentIdentifier": {
        "type": "string"
      },
      "ProfileEmailArgs": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ProjectDetails": {
        "type": "object",
        "required": [
          "id",
          "name",
          "slug",
          "isDemo",
          "teamId",
          "createTime"
        ],
        "properties": {
          "createTime": {
            "type": "integer",
            "format": "int64"
          },
          "devDeploymentName": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "isDemo": {
            "type": "boolean"
          },
          "name": {
            "$ref": "#/components/schemas/ProjectName"
          },
          "prodDeploymentName": {
            "type": [
              "string",
              "null"
            ]
          },
          "slug": {
            "$ref": "#/components/schemas/ProjectSlug"
          },
          "teamId": {
            "$ref": "#/components/schemas/TeamId"
          }
        }
      },
      "ProjectId": {
        "type": "integer",
        "format": "int64",
        "minimum": 0
      },
      "ProjectMemberRoleResponse": {
        "type": "object",
        "required": [
          "projectId",
          "memberId",
          "teamId",
          "role",
          "lastUpdated"
        ],
        "properties": {
          "lastUpdated": {
            "type": "integer",
            "format": "int64"
          },
          "memberId": {
            "$ref": "#/components/schemas/MemberId"
          },
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "role": {
            "$ref": "#/components/schemas/ProjectRole"
          },
          "teamId": {
            "$ref": "#/components/schemas/TeamId"
          }
        }
      },
      "ProjectName": {
        "type": "string"
      },
      "ProjectRole": {
        "type": "string",
        "enum": [
          "admin"
        ]
      },
      "ProjectRoleUpdateArg": {
        "type": "object",
        "required": [
          "memberId",
          "projectId"
        ],
        "properties": {
          "memberId": {
            "$ref": "#/components/schemas/MemberId"
          },
          "projectId": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectRole"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ProjectSlug": {
        "type": "string"
      },
      "ProposedTeamName": {
        "type": "string"
      },
      "ProvisionDeploymentDashboardArgs": {
        "type": "object",
        "required": [
          "deploymentType"
        ],
        "properties": {
          "deploymentType": {
            "$ref": "#/components/schemas/DeploymentType"
          }
        },
        "additionalProperties": false
      },
      "ProvisionDeploymentDashboardResponse": {
        "type": "object",
        "required": [
          "deploymentName"
        ],
        "properties": {
          "deploymentName": {
            "type": "string"
          }
        }
      },
      "ProvisionWorkOSTeamRequest": {
        "type": "object",
        "required": [
          "teamId",
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address to use for the WorkOS team admin,\nmust be a verified email address associated with the user's account"
          },
          "teamId": {
            "$ref": "#/components/schemas/TeamId",
            "description": "Convex team ID, no WorkOS team exists at this point"
          }
        }
      },
      "ProvisionWorkOSTeamResponse": {
        "type": "object",
        "required": [
          "workosTeamId",
          "workosTeamName",
          "adminEmail"
        ],
        "properties": {
          "adminEmail": {
            "type": "string"
          },
          "workosTeamId": {
            "type": "string"
          },
          "workosTeamName": {
            "type": "string"
          }
        }
      },
      "RecordTokensArgs": {
        "type": "object",
        "required": [
          "centitokens"
        ],
        "properties": {
          "centitokens": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "ReferralCode": {
        "type": "string"
      },
      "ReferralState": {
        "type": "object",
        "required": [
          "referrals"
        ],
        "properties": {
          "referrals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamName"
            }
          },
          "referredBy": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TeamName"
              }
            ]
          }
        }
      },
      "RegisterOauthAppArgs": {
        "type": "object",
        "required": [
          "appName",
          "redirectUris"
        ],
        "properties": {
          "appName": {
            "$ref": "#/components/schemas/AppName"
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "RemoveMemberArgs": {
        "type": "object",
        "required": [
          "memberId"
        ],
        "properties": {
          "memberId": {
            "$ref": "#/components/schemas/MemberId"
          }
        },
        "additionalProperties": false
      },
      "RenameAccessTokenArgs": {
        "type": "object",
        "required": [
          "accessToken",
          "newName"
        ],
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Authentication token is expected to be the access token from WorkOS"
          },
          "newName": {
            "$ref": "#/components/schemas/DeviceName"
          }
        },
        "additionalProperties": false
      },
      "RequestDestination": {
        "type": "string",
        "enum": [
          "convexCloud",
          "convexSite"
        ]
      },
      "RestoreFromCloudBackupArgs": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/CloudBackupId"
          }
        }
      },
      "Role": {
        "type": "string",
        "enum": [
          "admin",
          "developer"
        ]
      },
      "SerializedAccessToken": {
        "type": "string",
        "description": "ConvexAccessToken is our own internal notion of authorization.\nIt is versioned.\n\nV1 - uses an WorkOS access token for authorization.\n\nSerialization is done by SerializedAccessToken::new\nThe ConvexAccessToken is serialized (json) and base64\nencoded for obfuscation before sending it to the client\n\nDeserialization is done by SerializedAccessToken::decode\nThis reverses the process and returns a ConvexAccessToken which\ncan be match'd by the extractor.\n\n`SerializedAccessToken` is intentionally the only struct that is\nleft public.\n\nThe json is externally tagged. Expect it to look like\n{\"v1\": \"workostoken\"}"
      },
      "SetSpendingLimitArgs": {
        "type": "object",
        "properties": {
          "disableThresholdCents": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64",
            "minimum": 0
          },
          "warningThresholdCents": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64",
            "minimum": 0
          }
        },
        "additionalProperties": false
      },
      "SetupIntentResponse": {
        "type": "object",
        "required": [
          "clientSecret"
        ],
        "properties": {
          "clientSecret": {
            "type": "string"
          }
        }
      },
      "SpendingLimitsState": {
        "type": "string",
        "enum": [
          "Running",
          "Disabled",
          "Warning"
        ]
      },
      "Team": {
        "type": "object",
        "required": [
          "id",
          "name",
          "slug",
          "suspended",
          "referralCode"
        ],
        "properties": {
          "creator": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/MemberId"
              }
            ]
          },
          "id": {
            "$ref": "#/components/schemas/TeamId"
          },
          "managedBy": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "$ref": "#/components/schemas/TeamName"
          },
          "referralCode": {
            "$ref": "#/components/schemas/ReferralCode"
          },
          "referredBy": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TeamId"
              }
            ]
          },
          "slug": {
            "$ref": "#/components/schemas/TeamSlug"
          },
          "suspended": {
            "type": "boolean"
          }
        }
      },
      "TeamAccessTokenResponse": {
        "type": "object",
        "required": [
          "accessToken",
          "name",
          "creationTime",
          "serializedAccessToken",
          "creator"
        ],
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "creationTime": {
            "type": "integer",
            "format": "int64"
          },
          "creator": {
            "$ref": "#/components/schemas/MemberId"
          },
          "lastUsedTime": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "name": {
            "$ref": "#/components/schemas/DeviceName"
          },
          "permissions": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "serializedAccessToken": {
            "$ref": "#/components/schemas/SerializedAccessToken"
          }
        }
      },
      "TeamCurrentBillingPeriodResponse": {
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "properties": {
          "end": {
            "type": "string"
          },
          "start": {
            "type": "string"
          }
        }
      },
      "TeamEntitlementsResponse": {
        "type": "object",
        "required": [
          "maxTeamMembers",
          "maxProjects",
          "teamMaxFunctionCalls",
          "teamMaxActionCompute",
          "teamMaxDatabaseStorage",
          "teamMaxDatabaseBandwidth",
          "teamMaxFileStorage",
          "teamMaxFileBandwidth",
          "logStreamingEnabled",
          "streamingExportEnabled",
          "projectMaxPreviewDeployments",
          "teamMaxVectorStorage",
          "teamMaxVectorBandwidth",
          "auditLogsEnabled",
          "customDomainsEnabled",
          "periodicBackupsEnabled",
          "maxCloudBackups",
          "maxChefTokens",
          "ssoEnabled"
        ],
        "properties": {
          "auditLogsEnabled": {
            "type": "boolean"
          },
          "customDomainsEnabled": {
            "type": "boolean"
          },
          "logStreamingEnabled": {
            "type": "boolean"
          },
          "maxChefTokens": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "maxCloudBackups": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "maxProjects": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "maxTeamMembers": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "periodicBackupsEnabled": {
            "type": "boolean"
          },
          "projectMaxPreviewDeployments": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "ssoEnabled": {
            "type": "boolean"
          },
          "streamingExportEnabled": {
            "type": "boolean"
          },
          "teamMaxActionCompute": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "teamMaxDatabaseBandwidth": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "teamMaxDatabaseStorage": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "teamMaxFileBandwidth": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "teamMaxFileStorage": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "teamMaxFunctionCalls": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "teamMaxVectorBandwidth": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "teamMaxVectorStorage": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "TeamId": {
        "type": "integer",
        "format": "int64",
        "minimum": 0
      },
      "TeamMemberResponse": {
        "type": "object",
        "required": [
          "id",
          "email",
          "role"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/MemberId"
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        }
      },
      "TeamName": {
        "type": "string"
      },
      "TeamSlug": {
        "type": "string"
      },
      "TeamUsageStateResponse": {
        "type": "object",
        "required": [
          "teamId",
          "usageState"
        ],
        "properties": {
          "teamId": {
            "$ref": "#/components/schemas/TeamId"
          },
          "usageState": {
            "$ref": "#/components/schemas/UsageState"
          }
        }
      },
      "TransferProjectArgs": {
        "type": "object",
        "required": [
          "destinationTeamId"
        ],
        "properties": {
          "destinationTeamId": {
            "$ref": "#/components/schemas/TeamId"
          }
        },
        "additionalProperties": false
      },
      "UnlinkDiscordAccountRequest": {
        "type": "object",
        "required": [
          "discordId"
        ],
        "properties": {
          "discordId": {
            "$ref": "#/components/schemas/DiscordId"
          }
        },
        "additionalProperties": false
      },
      "UnlinkIdentityRequest": {
        "type": "object",
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "type": "string"
          }
        }
      },
      "UpdateBillingAddressArgs": {
        "type": "object",
        "required": [
          "billingAddress"
        ],
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "additionalProperties": false
      },
      "UpdateBillingContactArgs": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateEnvironmentVariable": {
        "type": "object",
        "properties": {
          "newConfig": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EnvVariableConfigJson"
              }
            ]
          },
          "oldVariable": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/EnvironmentVariableJson"
              }
            ]
          }
        }
      },
      "UpdateEnvironmentVariables": {
        "type": "object",
        "required": [
          "changes"
        ],
        "properties": {
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateEnvironmentVariable"
            }
          }
        }
      },
      "UpdateMemberRoleArgs": {
        "type": "object",
        "required": [
          "memberId",
          "role"
        ],
        "properties": {
          "memberId": {
            "$ref": "#/components/schemas/MemberId"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        },
        "additionalProperties": false
      },
      "UpdateOauthAppArgs": {
        "type": "object",
        "properties": {
          "appName": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AppName"
              }
            ]
          },
          "redirectUris": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "UpdatePaymentMethodArgs": {
        "type": "object",
        "required": [
          "paymentMethod"
        ],
        "properties": {
          "paymentMethod": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateProfileNameArgs": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "UpdateProjectArgs": {
        "type": "object",
        "properties": {
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectName"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProjectSlug"
              }
            ]
          }
        }
      },
      "UpdateProjectRolesArgs": {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectRoleUpdateArg"
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateTeamArgs": {
        "type": "object",
        "properties": {
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProposedTeamName"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TeamSlug"
              }
            ]
          }
        }
      },
      "UsageState": {
        "type": "string",
        "enum": [
          "Default",
          "Approaching",
          "Exceeded",
          "Paused",
          "Disabled"
        ]
      },
      "ValidateReferralCodeResult": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Valid"
            ],
            "properties": {
              "Valid": {
                "type": "object",
                "required": [
                  "teamName",
                  "exhausted"
                ],
                "properties": {
                  "exhausted": {
                    "type": "boolean"
                  },
                  "teamName": {
                    "$ref": "#/components/schemas/TeamName"
                  }
                }
              }
            }
          },
          {
            "type": "string",
            "enum": [
              "Invalid"
            ]
          }
        ]
      },
      "Value": {},
      "VanityDomainResponse": {
        "type": "object",
        "required": [
          "creationTime",
          "instanceName",
          "requestDestination",
          "domain"
        ],
        "properties": {
          "creationTime": {
            "type": "integer",
            "format": "int64"
          },
          "domain": {
            "type": "string"
          },
          "instanceName": {
            "$ref": "#/components/schemas/InstanceName"
          },
          "requestDestination": {
            "$ref": "#/components/schemas/RequestDestination"
          },
          "verificationTime": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          }
        }
      },
      "WorkOSAssociatedTeam": {
        "type": "object",
        "required": [
          "convexTeamId",
          "workosTeamId",
          "workosTeamName",
          "workosAdminEmail",
          "creatorMemberId"
        ],
        "properties": {
          "convexTeamId": {
            "$ref": "#/components/schemas/TeamId"
          },
          "creatorMemberId": {
            "$ref": "#/components/schemas/MemberId"
          },
          "workosAdminEmail": {
            "type": "string"
          },
          "workosTeamId": {
            "type": "string"
          },
          "workosTeamName": {
            "type": "string"
          }
        }
      },
      "WorkOSEnvironmentInfo": {
        "type": "object",
        "required": [
          "deploymentName",
          "workosEnvironmentId",
          "workosEnvironmentName",
          "workosClientId"
        ],
        "properties": {
          "deploymentName": {
            "type": "string"
          },
          "workosClientId": {
            "type": "string"
          },
          "workosEnvironmentId": {
            "type": "string"
          },
          "workosEnvironmentName": {
            "type": "string"
          }
        }
      },
      "WorkOSTeamAssociation": {
        "type": "object",
        "required": [
          "workosTeamId",
          "workosTeamName",
          "adminEmail",
          "creatorEmail"
        ],
        "properties": {
          "adminEmail": {
            "type": "string"
          },
          "creatorEmail": {
            "type": "string"
          },
          "creatorName": {
            "type": [
              "string",
              "null"
            ]
          },
          "workosTeamId": {
            "type": "string"
          },
          "workosTeamName": {
            "type": "string"
          }
        }
      },
      "WorkOSTeamIntegrationResponse": {
        "type": "object",
        "required": [
          "environments"
        ],
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkOSEnvironmentInfo"
            },
            "description": "List of WorkOS environments for deployments"
          },
          "teamAssociation": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/WorkOSTeamAssociation",
                "description": "WorkOS team association info, if it exists"
              }
            ]
          }
        }
      }
    }
  }
}