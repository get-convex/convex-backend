/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/teams": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_teams_for_member"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/teams/{team_slug}/projects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_cli_projects_for_team"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Format: int64 */
        MemberId: number;
        ProjectDetails: {
            /** Format: int64 */
            createTime: number;
            id: components["schemas"]["ProjectId"];
            isDemo: boolean;
            name: components["schemas"]["ProjectName"];
            slug: components["schemas"]["ProjectSlug"];
            teamId: components["schemas"]["TeamId"];
        };
        /** Format: int64 */
        ProjectId: number;
        ProjectName: string;
        ProjectSlug: string;
        ReferralCode: string;
        Team: {
            creator?: null | components["schemas"]["MemberId"];
            id: components["schemas"]["TeamId"];
            managedBy?: string | null;
            name: components["schemas"]["TeamName"];
            referralCode: components["schemas"]["ReferralCode"];
            referredBy?: null | components["schemas"]["TeamId"];
            slug: components["schemas"]["TeamSlug"];
            suspended: boolean;
        };
        /** Format: int64 */
        TeamId: number;
        TeamName: string;
        TeamSlug: string;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type MemberId = components['schemas']['MemberId'];
export type ProjectDetails = components['schemas']['ProjectDetails'];
export type ProjectId = components['schemas']['ProjectId'];
export type ProjectName = components['schemas']['ProjectName'];
export type ProjectSlug = components['schemas']['ProjectSlug'];
export type ReferralCode = components['schemas']['ReferralCode'];
export type Team = components['schemas']['Team'];
export type TeamId = components['schemas']['TeamId'];
export type TeamName = components['schemas']['TeamName'];
export type TeamSlug = components['schemas']['TeamSlug'];
export type $defs = Record<string, never>;
export interface operations {
    get_teams_for_member: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Team"][];
                };
            };
        };
    };
    get_cli_projects_for_team: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Team slug identifier */
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectDetails"][];
                };
            };
        };
    };
}
